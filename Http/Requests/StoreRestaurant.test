<?php
namespace Modules\Food\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
//------ traits
use Modules\Extend\Traits\FormRequestTrait;
//----- rules
use Modules\Food\Rules\TitleSlugUnique as TitleSlugUniqueRule; 


class StoreRestaurant extends FormRequest
{
    use FormRequestTrait;

    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        //$request = Request();
        //$this->request->add(['title' => $this->handle]);


        $data = $this->request->all();
        $this->request->add(['title' => $data['title'].' - '.$data['locality']]);
        //$data = $this->request->all();
        //ddd($data);

        return [
            'title' => [
                'required',
                'min:3',
                'max:50',
                new TitleSlugUniqueRule,
            ],
            //'subtitle' => 'min:10|max:100',
//            'website' => ['required',
//                //'regex:/^[0-9\/+ ]{10,15}/'
//            ],
            //'email' => 'email|required|max:255',
            'address' => 'required',
            //'phone' => ['required',
            //    'regex:/^[0-9\/+ ]{10,15}/'
            //],
            'txt' => 'max:4096',
            'restaurant_accept_rules' => 'accepted',
        ];
    }
}
/*

switch($this->method())
    {
        case 'GET':
        case 'DELETE':
        {
            return [];
        }
        case 'POST':
        {
            return [
                'user.name.first' => 'required',
                'user.name.last'  => 'required',
                'user.email'      => 'required|email|unique:users,email',
                'user.password'   => 'required|confirmed',
            ];
        }
        case 'PUT':
        case 'PATCH':
        {
            return [
                'user.name.first' => 'required',
                'user.name.last'  => 'required',
                'user.email'      => 'required|email|unique:users,email,'.$user->id,
                'user.password'   => 'required|confirmed',
            ];
        }
        default:break;
    }

    */
