<?php

namespace Modules\Food\Tests\Feature;

/*
* https://vegibit.com/how-to-create-a-feature-test-in-laravel/
* https://www.neontsunami.com/posts/scaffolding-laravel-tests !!
*
**/
//--- MODELS ---
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Modules\Food\Models\Restaurant as MyModel;
use Modules\Food\Models\RestaurantOwner;
use Modules\LU\Models\User;
use Modules\Xot\Services\PanelService as Panel;
use Tests\TestCase;

class RestaurantXTest extends TestCase {
    /**
     * use DatabaseMigrations;  con questo non funziona nulla.
     *
     **/
    private $init = false;
    private $row;
    private $post_type;
    private $langs;

    public function init() {
        $this->row = factory(MyModel::class)->create();
        $this->panel = Panel::get($this->row);
        $this->post_type = collect(config('xra.model'))->search(MyModel::class);
        $this->langs = array_keys(config('laravellocalization.supportedLocales'));
        $this->init = true;
        $this->table = with(new MyModel())->getTable();
        $this->user = factory(User::class)->make();
        $response = $this->myTestUrl('/', __FUNCTION__);
    }

    public function myTestUrl($url, $label = '', $user = null) {
        if (null == $user) {
            $response = $this->get($url);
        } else {
            $response = $this->actingAs($user)->get($url);
        }
        echo PHP_EOL.'['.$label.'] url: '.$url.'  status: '.$response->status();
        //$response->assertStatus(200);
        return $response;
    }

    /**
     * A user can browse threads.
     */
    public function test_index_page() {
        if (! $this->init) {
            $this->init();
        }
        $url = Panel::get($this->row)->indexUrl();
        $response = $this->myTestUrl($url, __FUNCTION__);
        $response->assertStatus(200);
        //$response->assertSee($row->title);
    }

    public function test_create_page_not_logged() {
        if (! $this->init) {
            $this->init();
        }
        $panel = Panel::get($this->row);
        $url = $panel->createUrl();
        $response = $this->myTestUrl($url, __FUNCTION__); // restaurant/create?  status: 302
        $row1 = factory(RestaurantOwner::class)->make();
        $panel1 = Panel::get($row1);
        $url1 = $panel1->createUrl();
        $response1 = $this->myTestUrl($url1, __FUNCTION__);
        $response->assertRedirect($url1);
        $response1->assertStatus(200);
        //$response->assertSee($row->title);
    }

    public function test_create_page_logged() {
        if (! $this->init) {
            $this->init();
        }
        $panel = Panel::get($this->row);
        $url = $panel->createUrl();

        $response = $this->myTestUrl($url, __FUNCTION__, $this->user); // restaurant/create?  status: 302
        $response->assertStatus(200);
    }

    public function test_store_valid() {
        if (! $this->init) {
            $this->init();
        }
        $attributes = factory(MyModel::class)->raw();

        $url = $this->panel->storeUrl();

        $response = $this->actingAs($this->user)->post($url, $attributes);
        echo PHP_EOL.'['.__FUNCTION__.'] url: '.$url.'  status: '.$response->status();

        $this->assertTrue(true);
    }

    public function test_store_invalid() {
        if (! $this->init) {
            $this->init();
        }
        $url = $this->panel->storeUrl();

        $response = $this->actingAs($this->user)->post($url, []);
        echo PHP_EOL.'['.__FUNCTION__.'] url: '.$url.'  status: '.$response->status();

        $response->assertSessionHasErrors();
        //$this->assertNull(Post::first())
        $this->assertTrue(true);
    }

    public function test_show_page() {
        if (! $this->init) {
            $this->init();
        }
        $url = Panel::get($this->row)->showUrl();
        $response = $this->myTestUrl($url, __FUNCTION__);
        $response->assertStatus(200);
        //$response->assertSee($row->title);
    }

    public function test_edit_page_not_logged() {
        if (! $this->init) {
            $this->init();
        }
        $url = Panel::get($this->row)->editUrl();
        $response = $this->myTestUrl($url, __FUNCTION__);
        $response->assertStatus(200);
        //$response->assertSee($row->title);
    }

    public function test_edit_page_logged() {
        if (! $this->init) {
            $this->init();
        }
        $url = Panel::get($this->row)->editUrl();
        $response = $this->myTestUrl($url, __FUNCTION__, $this->user);
        $response->assertStatus(200);
        //$response->assertSee($row->title);
    }

    public function test_update_valid() {
        $this->assertTrue(true);
    }

    public function test_update_invalid() {
        $this->assertTrue(true);
    }

    public function test_delete() {
        if (! $this->init) {
            $this->init();
        }
        $url = $this->panel->destroyUrl();
        $response = $this->delete($url);
        echo PHP_EOL.'['.$label.'] url: '.$url.'  status: '.$response->status();
        //$this->assertNull($this->row->fresh());
        $this->assertTrue(true);
    }
}
