<?php

namespace Modules\Food\Models\Panels\Actions;

use Modules\Theme\Services\ThemeService;
use Modules\Xot\Models\Panels\Actions\XotBasePanelAction;
use Modules\Xot\Services\PanelService as Panel;

//-------- bases -----------
class AddItemCartAction extends XotBasePanelAction {
    public $onItem = true; //onlyContainer
    public $onContainer = false; //onlyContainer
    //mettere freccette su e giÃ¹
    public $icon = '<i class="fa fa-plus"></i>';

    public function handle() {
        $view = 'pub_theme::cart.modal.'.$this->getName();

        return ThemeService::view($view)
            ->with('row', $this->row);
    }

    public function postHandle() {
        $data = request()->all();
        //dddx($data);
        //dddx($this);
        //dddx(get_defined_vars());
        [$containers,$items] = params2ContainerItem();
        $shop = collect($items)->firstWhere('post_type', 'restaurant');
        $recipe = $this->row;
        $ingredient_cats = $recipe->ingredientCats;
        $item = (object) [
            'shop_id' => $shop->id,
            'shop_type' => $shop->post_type,
            'shop_title' => $shop->title,
            /*
            'item_cat_id',
            'item_cat_type'
            'item_cat_title'
            */
            'item_id' => $recipe->id,
            'item_type' => $recipe->post_type,
            'item_title' => $recipe->title,

            'pivot_id' => $recipe->pivot->id,
            'price' => $recipe->pivot->price,
            'qty' => $data['qty'],
            'auth_user_id' => \Auth::id(),
        ];
        dddx($item);

        $item_vars = [];
        if (isset($data['product']) && is_array($data['product'])) {
            foreach ($data['product'] as $cat_id => $cat) {
                $ingredient_cat = $ingredient_cats->firstWhere('id', $cat_id);
                $ingredients = $ingredient_cat->ingredients;
                foreach ($cat as $item_id => $qty) {
                    $ingredient = $ingredients->firstWhere('id', $item_id);
                    //echo '<br/>'.$ingredient->title.'   '.$ingredient->pivot->price.'  '.$qty;
                    $tmp = (object) [
                        'var_cat_id' => $cat_id,
                        'var_cat_type' => $ingredient_cat->post_type,
                        'var_cat_title' => $ingredient_cat->title,

                        'var_item_id' => $item_id,
                        'var_item_type' => $ingredient->post_type,
                        'var_item_title' => $ingredient->title,

                        'pivot_id' => $ingredient->pivot->id,
                        'price' => $ingredient->pivot->price,
                        'qty' => $qty,
                        'auth_user_id' => \Auth::id(),
                    ];
                    if (-1 == $tmp->qty) {
                        $tmp->price = 0; //se tolgo il cliente non ha sconti
                    }
                    if (0 != $tmp->qty) {
                        $item_vars[] = get_object_vars($tmp);
                    }
                }
            }
        }
        $cart = $shop->myCartWithThisRestaurant()
            ->firstOrCreate(['auth_user_id' => \Auth::id()]);
        $cart_item = $cart->items()->create(get_object_vars($item));
        $cart_item_vars = $cart_item->variations()->createMany($item_vars);

        $url = Panel::make()->get($shop)
        ->relatedName('cuisine')
        ->url(['act' => 'index']);
        //dddx($url);
        return redirect($url);
        //return 'fatto';

        //return redirect()->back();
    }
}
